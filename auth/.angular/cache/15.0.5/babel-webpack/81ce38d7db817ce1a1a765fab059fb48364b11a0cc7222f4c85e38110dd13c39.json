{"ast":null,"code":"import _defineProperty from \"C:/angular/auth/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" \\u041D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u044B\\u0439 email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" \\u041D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor() {\n    _defineProperty(this, \"em\", \"1195101@mtp.by\");\n    _defineProperty(this, \"pas\", \"qawsed111\");\n    _defineProperty(this, \"myForm\", void 0);\n    this.myForm = new FormGroup({\n      \"userEmail\": new FormControl(\"\", [Validators.required, Validators.email]),\n      \"userPassword\": new FormControl(\"\", [Validators.pattern(\"[0-9]\"), Validators.minLength(8)])\n    });\n  }\n  send() {\n    if ((FormControl.arguments.userEmail = this.em) && (FormControl.arguments.userPassword = this.pas)) {\n      console.log(1111);\n    }\n    console.log(this.myForm);\n  }\n  submit() {\n    console.log(this.myForm);\n  }\n}\n_defineProperty(AppComponent, \"\\u0275fac\", function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n});\n_defineProperty(AppComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"my-app\"]],\n  decls: 14,\n  vars: 4,\n  consts: [[\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"name\", \"email\", \"formControlName\", \"userEmail\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"name\", \"password\", \"formControlName\", \"userPassword\", 1, \"form-control\"], [1, \"btn\", \"btn-default\", 3, \"disabled\", \"click\"], [1, \"alert\", \"alert-danger\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n      i0.ɵɵtext(3, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵtemplate(5, AppComponent_div_5_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\");\n      i0.ɵɵtext(8, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵtemplate(10, AppComponent_div_10_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_12_listener() {\n        return ctx.send();\n      });\n      i0.ɵɵtext(13, \" \\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls[\"userEmail\"].invalid && ctx.myForm.controls[\"userEmail\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls[\"userPassword\"].invalid && ctx.myForm.controls[\"userPassword\"].touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.myForm.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"input.ng-touched.ng-invalid[_ngcontent-%COMP%]{border:solid red 2px}input.ng-touched.ng-valid[_ngcontent-%COMP%]{border:solid green 2px}\"]\n}));\nexport class PasswordValidation {\n  static MatchPassword(AC) {\n    let usPas = AC.get('userPassword').value; // to get value in input tag\n    let pas = \"qawsed111\";\n    if (usPas != pas) {\n      console.log('false');\n      AC.get('pas').setErrors({\n        MatchPassword: true\n      });\n    } else {\n      console.log('true');\n      return null;\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}