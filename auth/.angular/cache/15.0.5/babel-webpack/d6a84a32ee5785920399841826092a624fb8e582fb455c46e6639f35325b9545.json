{"ast":null,"code":"import _defineProperty from \"C:/angular/auth/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* Reactive forms */\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataService } from './data.service';\nlet AppComponent = class AppComponent {\n  constructor(router, dataService) {\n    _defineProperty(this, \"router\", void 0);\n    _defineProperty(this, \"dataService\", void 0);\n    _defineProperty(this, \"myForm\", void 0);\n    this.router = router;\n    this.dataService = dataService;\n    this.myForm = new FormGroup({\n      \"userEmail\": new FormControl(\"\", [Validators.required, Validators.email]),\n      \"userPassword\": new FormControl(\"\", [Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'), Validators.minLength(8)])\n    });\n  }\n  submit() {\n    if (this.myForm.value.userEmail == this.dataService.email && this.myForm.value.userPassword == this.dataService.password) {\n      //console.log(1111);\n      this.router.navigateByUrl('/main');\n    } else {\n      alert(\"Что-то не так\");\n    }\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  styles: [`\n        input.ng-touched.ng-invalid {border:solid red 2px;}\n        input.ng-touched.ng-valid {border:solid green 2px;}\n    `],\n  template: `\n                <form [formGroup]=\"myForm\" novalidate (ngSubmit)=\"submit()\">\n                \n                    <div class=\"form-group\">\n                        <label>Email</label>\n                        <input class=\"form-control\" name=\"email\" formControlName=\"userEmail\" />\n                          \n                        <div class=\"alert alert-danger\"\n                            *ngIf=\"myForm.controls['userEmail'].invalid && myForm.controls['userEmail'].touched\">\n                            Некорректный email\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Пароль</label>\n                        <input class=\"form-control\" name=\"password\" formControlName=\"userPassword\" />\n                        <div class=\"alert alert-danger\"\n                            *ngIf=\"myForm.controls['userPassword'].invalid && myForm.controls['userPassword'].touched\">\n                            Некорректный пароль\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-default\">\n                            Отправить\n                        </button>\n                    </div>\n                  \n                </form>\n                <router-outlet></router-outlet>\t\n                `,\n  providers: [DataService]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}