{"ast":null,"code":"/* FormBuilder */\n/* FormArray - несколько полей для одного значения (ном. тел)\r\nimport { Component} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\r\n  \r\n@Component({\r\n    selector: 'my-app',\r\n    styles: [`\r\n        input.ng-touched.ng-invalid {border:solid red 2px;}\r\n        input.ng-touched.ng-valid {border:solid green 2px;}\r\n    `],\r\n    template: `<form [formGroup]=\"myForm\" novalidate (ngSubmit)=\"submit()\">\r\n                    <div class=\"form-group\">\r\n                        <label>Имя</label>\r\n                        <input class=\"form-control\" name=\"name\" formControlName=\"userName\" />\r\n                         \r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userName'].invalid && myForm.controls['userName'].touched\">\r\n                            Не указано имя\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" name=\"email\" formControlName=\"userEmail\" />\r\n                         \r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userEmail'].invalid && myForm.controls['userEmail'].touched\">\r\n                            Некорректный email\r\n                        </div>\r\n                    </div>\r\n                    <div formArrayName=\"phones\">\r\n                        <div class=\"form-group\" *ngFor=\"let phone of getFormsControls()['controls']; let i = index\">\r\n                            <label>Телефон</label>\r\n                            <input class=\"form-control\" formControlName=\"{{i}}\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-default\" (click)=\"addPhone()\">\r\n                            Добавить телефон\r\n                        </button>\r\n                        <button class=\"btn btn-default\" [disabled]=\"myForm.invalid\">\r\n                            Отправить\r\n                        </button>\r\n                    </div>\r\n                </form>`\r\n})\r\nexport class AppComponent {\r\n  \r\n    myForm : FormGroup;\r\n    constructor(){\r\n        this.myForm = new FormGroup({\r\n             \r\n            \"userName\": new FormControl(\"Tom\", [Validators.required]),\r\n            \"userEmail\": new FormControl(\"\", [\r\n                                Validators.required,\r\n                                Validators.email\r\n                            ]),\r\n            \"phones\": new FormArray([\r\n                new FormControl(\"+375\", Validators.required)\r\n            ])\r\n        });\r\n    }\r\n    getFormsControls() : FormArray{\r\n        return this.myForm.controls['phones'] as FormArray;\r\n    }\r\n    addPhone(){\r\n        (<FormArray>this.myForm.controls[\"phones\"]).push(new FormControl(\"+375\", Validators.required));\r\n    }\r\n    submit(){\r\n        console.log(this.myForm);\r\n    }\r\n}\r\n*/\n/* Reactive forms\r\nimport { Component} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\r\n   \r\n@Component({\r\n    selector: 'my-app',\r\n    styles: [`\r\n        input.ng-touched.ng-invalid {border:solid red 2px;}\r\n        input.ng-touched.ng-valid {border:solid green 2px;}\r\n    `],\r\n    template: `<form [formGroup]=\"myForm\" novalidate (ngSubmit)=\"submit()\">\r\n                    <div class=\"form-group\">\r\n                        <label>Имя</label>\r\n                        <input class=\"form-control\" name=\"name\" formControlName=\"userName\" />\r\n                          \r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userName'].invalid && myForm.controls['userName'].touched\">\r\n                            Не указано имя\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" name=\"email\" formControlName=\"userEmail\" />\r\n                          \r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userEmail'].invalid && myForm.controls['userEmail'].touched\">\r\n                            Некорректный email\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Телефон</label>\r\n                        <input class=\"form-control\" name=\"phone\" formControlName=\"userPhone\" />\r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userPhone'].invalid && myForm.controls['userPhone'].touched\">\r\n                            Некорректный номер телефона\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-default\" [disabled]=\"myForm.invalid\">\r\n                            Отправить\r\n                        </button>\r\n                    </div>\r\n                </form>`\r\n})\r\nexport class AppComponent {\r\n  \r\n    myForm : FormGroup;\r\n    constructor(){\r\n        this.myForm = new FormGroup({\r\n             \r\n            \"userName\": new FormControl(\"Tom\", [Validators.required, this.userNameValidator]),\r\n            \"userEmail\": new FormControl(\"\", [\r\n                                Validators.required,\r\n                                Validators.email\r\n                            ]),\r\n            \"userPhone\": new FormControl()\r\n        });\r\n    }\r\n    submit(){\r\n        console.log(this.myForm);\r\n    }\r\n    // валидатор\r\n    userNameValidator(control: FormControl): {[s:string]:boolean}|null{\r\n         \r\n        if(control.value===\"нет\"){\r\n            return {\"userName\": true};\r\n        }\r\n        return null;\r\n    }\r\n}\r\n*/\n/* Отправка форомы\r\nimport { Component} from '@angular/core';\r\nimport { NgForm} from '@angular/forms';\r\n \r\n@Component({\r\n    selector: 'my-app',\r\n    styles: [`\r\n        input.ng-touched.ng-invalid {border:solid red 2px;}\r\n        input.ng-touched.ng-valid {border:solid green 2px;}\r\n    `],\r\n    template: `<form #myForm=\"ngForm\" novalidate (ngSubmit)=\"onSubmit(myForm)\">\r\n                    <div class=\"form-group\">\r\n                        <label>Имя</label>\r\n                        <input class=\"form-control\" name=\"name\" ngModel required />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" name=\"email\" ngModel\r\n                            required email />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Телефон</label>\r\n                        <input class=\"form-control\" name=\"phone\" ngModel\r\n                            required pattern=\"[0-9]{10}\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"submit\" [disabled]=\"myForm.invalid\" class=\"btn btn-default\" value=\"Отправить\" />\r\n                    </div>\r\n                </form>`\r\n})\r\nexport class AppComponent {\r\n \r\n    name: string = \"\";\r\n    email: string = \"\";\r\n    phone: string = \"\";\r\n     \r\n    onSubmit(form: NgForm){\r\n        console.log(form);\r\n    }\r\n}\r\n*/\n/* Директива NgForm\r\nimport { Component} from '@angular/core';\r\nimport { NgForm} from '@angular/forms';\r\n \r\n@Component({\r\n    selector: 'my-app',\r\n    styles: [`\r\n        input.ng-touched.ng-invalid {border:solid red 2px;}\r\n        input.ng-touched.ng-valid {border:solid green 2px;}\r\n    `],\r\n    template: `<form #myForm=\"ngForm\" novalidate>\r\n                    <div class=\"form-group\">\r\n                        <label>Имя</label>\r\n                        <input class=\"form-control\" name=\"name\" [(ngModel)]=\"name\" required />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" name=\"email\" ngModel\r\n                            required email />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Телефон</label>\r\n                        <input class=\"form-control\" name=\"phone\" ngModel\r\n                            required pattern=\"[0-9]{10}\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button [disabled]=\"myForm.invalid\"\r\n                                class=\"btn btn-default\" (click)=\"submit(myForm)\">Добавить</button>\r\n                    </div>\r\n                </form>\r\n                <div>Имя: {{myForm.value.name}}</div>\r\n                <div>Email: {{myForm.value.email}}</div>\r\n                <div>Телефон: {{myForm.value.phone}}</div>`\r\n                \r\n})\r\nexport class AppComponent {\r\n \r\n    name: string = \"\";\r\n    email: string = \"\";\r\n    phone: string = \"\";\r\n     \r\n    submit(form: NgForm){\r\n        console.log(form);\r\n    }\r\n}\r\n*/\n/* Валидация с подстветкой\r\nimport { Component} from '@angular/core';\r\n       \r\nexport class User{\r\n    constructor(public name: string,\r\n        public email: string,\r\n        public phone: string){}\r\n}\r\n \r\n@Component({\r\n    selector: 'my-app',\r\n    styles: [`\r\n        input.ng-touched.ng-invalid {border:solid red 2px;}\r\n        input.ng-touched.ng-valid {border:solid green 2px;}\r\n    `],\r\n    template: `<div>\r\n                    <div class=\"form-group\">\r\n                        <label>Имя</label>\r\n                        <input class=\"form-control\" name=\"name\" [(ngModel)]=\"user.name\" #name=\"ngModel\" required />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" type=\"email\" name=\"email\" [(ngModel)]=\"user.email\" #email=\"ngModel\"\r\n                            required email />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Телефон</label>\r\n                        <input class=\"form-control\" name=\"phone\" [(ngModel)]=\"user.phone\" #phone=\"ngModel\"\r\n                            required pattern=\"[0-9]{10}\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button [disabled]=\"name.invalid || email.invalid || phone.invalid\"\r\n                                class=\"btn btn-default\" (click)=\"addUser()\">Добавить</button>\r\n                    </div>\r\n              </div>`\r\n})\r\nexport class AppComponent {\r\n \r\n    user: User = new User(\"\", \"\", \"\");\r\n    addUser(){\r\n        console.log(this.user);\r\n    }\r\n}\r\n*/\n/* Валидация без подсветки\r\n\r\nimport { Component} from '@angular/core';\r\n        \r\nexport class User{\r\n    constructor(public name: string,\r\n        public email: string,\r\n        public phone: string){}\r\n}\r\n  \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<div>\r\n                    <div class=\"form-group\">\r\n                        <label>Имя</label>\r\n                        <input class=\"form-control\" name=\"name\" [(ngModel)]=\"user.name\" #name=\"ngModel\" required />\r\n                        <div [hidden]=\"name.valid || name.untouched\" class=\"alert alert-danger\">\r\n                          Не указано имя\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" name=\"email\" [(ngModel)]=\"user.email\" #email=\"ngModel\"\r\n                            required pattern=\"^[a-zA-Z0-9.!#$%&’*+/=?^_{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\" />\r\n                        <div [hidden]=\"email.valid || email.untouched\" class=\"alert alert-danger\">\r\n                          Некорректный email\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Телефон</label>\r\n                        <input class=\"form-control\" name=\"phone\" [(ngModel)]=\"user.phone\" #phone=\"ngModel\"\r\n                            required pattern=\"[0-9]{10}\" />\r\n                        <div [hidden]=\"phone.valid || phone.untouched\" class=\"alert alert-danger\">\r\n                          Некорректный телефон\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button [disabled]=\"name.invalid || email.invalid || phone.invalid\"\r\n                        class=\"btn btn-default\" (click)=\"addUser()\">Добавить</button>\r\n                    </div>\r\n              </div>`\r\n})\r\nexport class AppComponent {\r\n  \r\n    user: User = new User(\"\", \"\", \"\");\r\n    addUser(){\r\n        console.log(this.user);\r\n    }\r\n}\r\n*/\n/* Получение и изменение модели\r\nimport { Component} from '@angular/core';\r\nimport { NgModel} from '@angular/forms';\r\n \r\nexport class Phone{\r\n    constructor(public title: string,\r\n                public price: number,\r\n                public company: string)\r\n    { }\r\n}\r\n \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<div class=\"col-xs-10\">\r\n                    <div class=\"form-group\">\r\n                        <label>Модель</label>\r\n                        <input class=\"form-control\" name=\"title\"\r\n                        [(ngModel)]=\"phone.title\" #phoneTitle=\"ngModel\"\r\n                        (ngModelChange)=\"onTitleChange()\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Цена</label>\r\n                        <input type=\"number\" class=\"form-control\" name=\"price\"\r\n                            [(ngModel)]=\"phone.price\" #phonePrice=\"ngModel\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Производитель</label>\r\n                        <select class=\"form-control\" name=\"company\"\r\n                            [(ngModel)]=\"phone.company\" #phoneCompany=\"ngModel\">\r\n                            <option  *ngFor=\"let comp of companies\" [value]=\"comp\">\r\n                                {{comp}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-default\" (click)=\"addPhone(phoneTitle, phonePrice, phoneCompany)\">\r\n                            Добавить\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <p>{{phoneTitle.name}} : {{phoneTitle.model}}</p>\r\n                        <p>{{phonePrice.name}} : {{phonePrice.model}}</p>\r\n                        <p>{{phoneCompany.name}} : {{phoneCompany.model}}</p>\r\n                    </div>\r\n              </div>\r\n              `\r\n})\r\nexport class AppComponent {\r\n \r\n    phone: Phone = new Phone(\"\", 0, \"\");\r\n    companies: string[] = [\"Apple\", \"Huawei\", \"Xiaomi\", \"Samsung\", \"LG\", \"Motorola\", \"Alcatel\"];\r\n     \r\n    addPhone(title:NgModel, price: NgModel, comp: NgModel){\r\n        console.log(title);\r\n        console.log(price);\r\n        console.log(comp);\r\n    }\r\n\r\n    onTitleChange(){\r\n         \r\n        if(this.phone.title==\"нет\")\r\n            this.phone.title = \"неизвестно\";\r\n    }\r\n}\r\n*/\n/* FormsModule\r\nimport { Component} from '@angular/core';\r\n       \r\nexport class Phone{\r\n    constructor(public title: string,\r\n                public price: number,\r\n                public company: string)\r\n    { }\r\n}\r\n \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<div>\r\n                    <div class=\"form-group\">\r\n                        <label>Название модели</label>\r\n                        <input class=\"form-control\" name=\"title\" [(ngModel)]=\"phone.title\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Цена</label>\r\n                        <input type=\"number\" class=\"form-control\" name=\"price\" [(ngModel)]=\"phone.price\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Производитель</label>\r\n                        <select class=\"form-control\" name=\"company\" [(ngModel)]=\"phone.company\">\r\n                            <option  *ngFor=\"let comp of companies\" [value]=\"comp\">\r\n                                {{comp}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-default\" (click)=\"addPhone()\">Добавить</button>\r\n                    </div>\r\n              </div>\r\n              <div><h3>Добавленные элементы</h3>\r\n                    <ul>\r\n                        <li *ngFor=\"let p of phones\">{{p.title}} ({{p.company}}) - {{p.price}}</li>\r\n                    </ul>\r\n              </div>`\r\n})\r\nexport class AppComponent {\r\n \r\n    phone: Phone = new Phone(\"\", 0, \"Huawei\");\r\n    phones: Phone[] = [];\r\n    companies: string[] = [\"Apple\", \"Huawei\", \"Xiaomi\", \"Samsung\", \"LG\", \"Motorola\", \"Alcatel\"];\r\n     \r\n    addPhone(){\r\n        this.phones.push(new Phone(this.phone.title, this.phone.price, this.phone.company));\r\n    }\r\n}\r\n*/","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}