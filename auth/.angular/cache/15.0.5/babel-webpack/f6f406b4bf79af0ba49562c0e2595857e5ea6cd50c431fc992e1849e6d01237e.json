{"ast":null,"code":"/* Reactive forms\r\nimport { Component} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport {AbstractControl} from '@angular/forms';\r\n   \r\n@Component({\r\n    selector: 'my-app',\r\n    styles: [`\r\n        input.ng-touched.ng-invalid {border:solid red 2px;}\r\n        input.ng-touched.ng-valid {border:solid green 2px;}\r\n    `],\r\n    \r\n    template: `<form [formGroup]=\"myForm\" novalidate (ngSubmit)=\"submit()\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" name=\"email\" formControlName=\"userEmail\" />\r\n                          \r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userEmail'].invalid && myForm.controls['userEmail'].touched\">\r\n                            Некорректный email\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label>Пароль</label>\r\n                        <input class=\"form-control\" name=\"password\" formControlName=\"userPassword\" />\r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userPassword'].invalid && myForm.controls['userPassword'].touched\">\r\n                            Некорректный пароль\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-default\" [disabled]=\"myForm.invalid\" (click)=\"send()\">\r\n                            Отправить\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>`\r\n})\r\nexport class AppComponent {\r\n  \r\n    em = \"1195101@mtp.by\";\r\n    pas =\"qawsed111\";\r\n\r\n\r\n    myForm : FormGroup;\r\n    constructor(){\r\n        this.myForm = new FormGroup({\r\n             \r\n            \"userEmail\": new FormControl(\"\", [\r\n                                Validators.required,\r\n                                Validators.email,\r\n                            ]),\r\n            \"userPassword\": new FormControl(\"\", [\r\n                Validators.pattern(\"[0-9]\"),\r\n                Validators.minLength(8),\r\n            ])\r\n            \r\n        });\r\n    }\r\n\r\n    send()\r\n    {\r\n        if (=this.email)\r\n        {\r\n            console.log(1111);\r\n        }\r\n        console.log(this.myForm);\r\n        \r\n    }\r\n    \r\n    submit(){\r\n        console.log(this.myForm);\r\n    }\r\n    // валидатор\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordValidation {\r\n\r\n    static MatchPassword(AC: AbstractControl) {\r\n       let usPas = AC.get('userPassword').value; // to get value in input tag\r\n       let pas =\"qawsed111\";\r\n       if(usPas != pas) {\r\n            console.log('false');\r\n            AC.get('pas').setErrors( {MatchPassword: true} )\r\n        } else {\r\n            console.log('true');\r\n            return null\r\n        }\r\n    }\r\n}\r\n*/\n/*import { Injectable } from '@angular/core';\r\nimport { Component} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport {AbstractControl} from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { tap, delay } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n   providedIn: 'root'\r\n   \r\n})\r\n@Component({\r\n    selector: 'my-app',\r\n    styles: [`\r\n        input.ng-touched.ng-invalid {border:solid red 2px;}\r\n        input.ng-touched.ng-valid {border:solid green 2px;}\r\n    `],\r\n    \r\n    template: `<form [formGroup]=\"myForm\" novalidate (ngSubmit)=\"submit()\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" name=\"name\" formControlName=\"userName\" />\r\n                          \r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userName'].invalid && myForm.controls['userName'].touched\">\r\n                            Некорректный email\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label>Пароль</label>\r\n                        <input class=\"form-control\" name=\"password\" formControlName=\"userPassword\" />\r\n                        <div class=\"alert alert-danger\"\r\n                            *ngIf=\"myForm.controls['userPassword'].invalid && myForm.controls['userPassword'].touched\">\r\n                            Некорректный пароль\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-default\" [disabled]=\"myForm.invalid\" (click)=\"send()\">\r\n                            Отправить\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>`\r\n})\r\nexport class AuthService {\r\n\r\n   isUserLoggedIn: boolean = false;\r\n\r\n   login(userName: string, password: string) {\r\n      console.log(userName);\r\n      console.log(password);\r\n      this.isUserLoggedIn = userName == 'admin' && password == 'admin';\r\n      localStorage.setItem('isUserLoggedIn', this.isUserLoggedIn ? \"true\" : \"false\");\r\n\r\n   return of(this.isUserLoggedIn).pipe(\r\n      delay(1000),\r\n      tap(val => {\r\n         console.log(\"Is User Authentication is successful: \" + val);\r\n      })\r\n   );\r\n   }\r\n\r\n   logout(): void {\r\n   this.isUserLoggedIn = false;\r\n      localStorage.removeItem('isUserLoggedIn');\r\n   }\r\n\r\n   constructor() { }\r\n}\r\n\r\nexport class AppComponent {\r\n\r\n    myForm : FormGroup;\r\n    constructor(){\r\n        this.myForm = new FormGroup({\r\n             \r\n            \"userEmail\": new FormControl(\"\", [\r\n                                Validators.required,\r\n                                Validators.email,\r\n                            ]),\r\n            \"userPassword\": new FormControl(\"\", [\r\n                Validators.pattern(\"[0-9]\"),\r\n                Validators.minLength(8),\r\n            ])\r\n            \r\n        });\r\n    }\r\n}\r\n*/\n/* Отправка форомы\r\nimport { Component} from '@angular/core';\r\nimport { NgForm} from '@angular/forms';\r\n \r\n@Component({\r\n    selector: 'my-app',\r\n    styles: [`\r\n        input.ng-touched.ng-invalid {border:solid red 2px;}\r\n        input.ng-touched.ng-valid {border:solid green 2px;}\r\n    `],\r\n    template: `<form #myForm=\"ngForm\" novalidate (ngSubmit)=\"onSubmit(myForm)\">\r\n                    <div class=\"form-group\">\r\n                        <label>Имя</label>\r\n                        <input class=\"form-control\" name=\"name\" ngModel required />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input class=\"form-control\" name=\"email\" ngModel\r\n                            required email />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Телефон</label>\r\n                        <input class=\"form-control\" name=\"phone\" ngModel\r\n                            required pattern=\"[0-9]{10}\" />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"submit\" [disabled]=\"myForm.invalid\" class=\"btn btn-default\" value=\"Отправить\" />\r\n                    </div>\r\n                </form>`\r\n})\r\nexport class AppComponent {\r\n \r\n    name: string = \"\";\r\n    email: string = \"\";\r\n    phone: string = \"\";\r\n     \r\n    onSubmit(form: NgForm){\r\n        console.log(form);\r\n    }\r\n}\r\n*/","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}