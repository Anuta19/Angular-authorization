{"ast":null,"code":"import _defineProperty from \"C:/angular/auth/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nlet AuthComponent = class AuthComponent {\n  constructor(router, auth) {\n    _defineProperty(this, \"router\", void 0);\n    _defineProperty(this, \"auth\", void 0);\n    _defineProperty(this, \"myForm\", void 0);\n    this.router = router;\n    this.auth = auth;\n    this.myForm = new FormGroup({\n      \"userEmail\": new FormControl(\"\", [Validators.required, Validators.email]),\n      \"userPassword\": new FormControl(\"\", [Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'), Validators.minLength(8)])\n    });\n  }\n  submit() {\n    this.auth.userList.forEach((elem1, index) => {\n      elem1;\n      if (this.myForm.value.userEmail == elem1.email && this.myForm.value.userPassword == elem1.password) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n};\nAuthComponent = __decorate([Component({\n  selector: 'auth-app',\n  template: `\n    <form [formGroup]=\"myForm\" novalidate (ngSubmit)=\"submit()\">\n                \n        <div class=\"form-group\">\n            <label>Email</label>\n            <input class=\"form-control\" name=\"email\" formControlName=\"userEmail\" />\n          \n            <div class=\"alert alert-danger\"\n                *ngIf=\"myForm.controls['userEmail'].invalid && myForm.controls['userEmail'].touched\">\n                Некорректный email\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Пароль</label>\n            <input class=\"form-control\" name=\"password\" formControlName=\"userPassword\" />\n            <div class=\"alert alert-danger\"\n                ngIf=\"myForm.controls['userPassword'].invalid && myForm.controls['userPassword'].touched\">\n                Некорректный пароль\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <button class=\"btn btn-default\">\n                Отправить\n            </button>\n        </div>\n  \n    </form>\n\n    <router-outlet></router-outlet>\t\n            `,\n  providers: [AuthService]\n})], AuthComponent);\nexport { AuthComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}