{"ast":null,"code":"import _defineProperty from \"C:/angular/auth/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _class;\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { of } from 'rxjs';\nimport { tap, delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nlet AuthService = (_class = class AuthService {\n  login(userName, password) {\n    console.log(userName);\n    console.log(password);\n    this.isUserLoggedIn = userName == 'admin' && password == 'admin';\n    localStorage.setItem('isUserLoggedIn', this.isUserLoggedIn ? \"true\" : \"false\");\n    return of(this.isUserLoggedIn).pipe(delay(1000), tap(val => {\n      console.log(\"Is User Authentication is successful: \" + val);\n    }));\n  }\n  logout() {\n    this.isUserLoggedIn = false;\n    localStorage.removeItem('isUserLoggedIn');\n  }\n  constructor() {\n    _defineProperty(this, \"isUserLoggedIn\", false);\n  }\n}, _defineProperty(_class, \"\\u0275fac\", function AuthService_Factory(t) {\n  return new (t || _class)();\n}), _defineProperty(_class, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n})), _class);\nAuthService = __decorate([Component({\n  selector: 'my-app',\n  styles: [`\n        input.ng-touched.ng-invalid {border:solid red 2px;}\n        input.ng-touched.ng-valid {border:solid green 2px;}\n    `],\n  template: `<form [formGroup]=\"myForm\" novalidate (ngSubmit)=\"submit()\">\n\n                    <div class=\"form-group\">\n                        <label>Email</label>\n                        <input class=\"form-control\" name=\"name\" formControlName=\"userName\" />\n                          \n                        <div class=\"alert alert-danger\"\n                            *ngIf=\"myForm.controls['userName'].invalid && myForm.controls['userName'].touched\">\n                            Некорректный email\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Пароль</label>\n                        <input class=\"form-control\" name=\"password\" formControlName=\"userPassword\" />\n                        <div class=\"alert alert-danger\"\n                            *ngIf=\"myForm.controls['userPassword'].invalid && myForm.controls['userPassword'].touched\">\n                            Некорректный пароль\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-default\" [disabled]=\"myForm.invalid\" (click)=\"send()\">\n                            Отправить\n                        </button>\n                    </div>\n\n                </form>`\n})], AuthService);\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}