{"ast":null,"code":"/*Реализация всех методов */\n/* nfOnChanges()\r\nimport { Component, OnChanges, SimpleChanges} from '@angular/core';\r\n      \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<child-comp [name]=\"name\"></child-comp>\r\n                <input type=\"text\" [(ngModel)]=\"name\" />\r\n                <input type=\"number\" [(ngModel)]=\"age\" />`\r\n})\r\nexport class AppComponent implements OnChanges {\r\n    name:string=\"Tom\";\r\n    age:number = 25;\r\n    ngOnChanges(changes: SimpleChanges) {\r\n      for (let propName in changes) {\r\n        let chng = changes[propName];\r\n        let cur  = JSON.stringify(chng.currentValue);\r\n        let prev = JSON.stringify(chng.previousValue);\r\n        this.log(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\r\n      }\r\n    }\r\n \r\n    private log(msg: string) {\r\n        console.log(msg);\r\n    }\r\n}\r\n*/\n/*Двустороняя привязка между свойств гл и дочер\r\nimport { Component} from '@angular/core';\r\n       \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<child-comp [(userName)]=\"name\"></child-comp>\r\n                <div>Выбранное имя: {{name}}</div>`\r\n})\r\nexport class AppComponent {\r\n \r\n    name: string = \"Tom\";\r\n}\r\n*/\n/*Привязка к событиям дочернего компонента количетсво кликов\r\nimport { Component } from '@angular/core';\r\n       \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<h2>Количество кликов: {{clicks}}</h2>\r\n              <child-comp (onChanged)=\"onChanged($event)\"></child-comp>`\r\n})\r\nexport class AppComponent {\r\n     \r\n    clicks:number = 0;\r\n    onChanged(increased:any){\r\n        increased==true?this.clicks++:this.clicks--;\r\n    }\r\n}\r\n*/\n/*Передача данных главный компонент возраст\r\nimport { Component } from '@angular/core';\r\n       \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<child-comp [userName]=\"name\" [userAge]=\"age\"></child-comp>\r\n                <input type=\"number\" [(ngModel)]=\"age\" />`\r\n})\r\nexport class AppComponent {\r\n    name:string=\"Tom\";\r\n    age:number = 24;\r\n}\r\n*/\n/*Передача данных главный компонент два значения\r\nimport { Component } from '@angular/core';\r\n      \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<child-comp [userName]=\"name\" [userAge]=\"age\"></child-comp>\r\n                <input type=\"text\" [(ngModel)]=\"name\"/>\r\n                <br>\r\n                <br>\r\n                <input type=\"text\" [(ngModel)]=\"age\" />`\r\n                \r\n})\r\nexport class AppComponent {\r\n    name:string=\"Tom\";\r\n    age:number = 24;\r\n}\r\n*/\n/* child.component 1\r\nimport { Component } from '@angular/core';\r\n      \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<child-comp><h2>Добро пожаловать {{name}}!</h2></child-comp>`,\r\n    styles: [`h2, p {color:#333;}`]\r\n})\r\nexport class AppComponent {\r\n    name = 'Tom';\r\n}\r\n\r\n*/\n/* Привязка стилей: если isRed = true, то фон красный, false - зеленый\r\nimport { Component} from '@angular/core';\r\n        \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<div [style.backgroundColor]=\"isRed? 'red' : 'green'\"></div>\r\n    <div [style.background-color]=\"!isRed ? 'red' : 'green'\"></div>\r\n    <input type=\"checkbox\" [(ngModel)]=\"isRed\" />`,\r\n    styles: [`\r\n        div {width:50px; height:50px; border:1px solid #ccc}\r\n    `]\r\n})\r\nexport class AppComponent{\r\n      \r\n    isRed = false;\r\n}\r\n\r\n*/\n/*Двусторонняя привязка - смена цвета\r\n\r\nimport { Component} from '@angular/core';\r\n        \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<div [class.isredbox]=\"isRed\"></div>\r\n            <div [class.isredbox]=\"!isRed\"></div>\r\n            <input type=\"checkbox\" [(ngModel)]=\"isRed\" />`,\r\n    styles: [`\r\n        div {width:50px; height:50px; border:1px solid #ccc}\r\n         .isredbox{background-color:red;}\r\n    `]\r\n})\r\nexport class AppComponent{\r\n      \r\n    isRed = false;\r\n}\r\n*/\n/*\r\nimport { Component } from '@angular/core';\r\n     \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<label>Введите имя:</label>\r\n                 <input [(ngModel)]=\"name\" placeholder=\"name\">\r\n                 <h1>Добро пожаловать {{name}}!</h1>`\r\n})\r\nexport class AppComponent {\r\n    name= '';\r\n}\r\n*/\n/* Двусторонняя привязка\r\n\r\nimport { Component } from '@angular/core';\r\n      \r\n@Component({\r\n    selector: 'my-app',\r\n    template: `<p>Привет {{name}}</p>\r\n                <input type=\"text\" [(ngModel)]=\"name\" /> <br><br>\r\n                <input type=\"text\" [(ngModel)]=\"name\" />`\r\n})\r\nexport class AppComponent {\r\n    name:string=\"Tom\";\r\n}\r\n*/","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}